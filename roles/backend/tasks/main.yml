#    dnf module disable nodejs -y
- name: Disable default version of nodejs
  ansible.builtin.shell:
    cmd: dnf module disable nodejs -y
#    dnf module enable nodejs:20 -y
- name: Enable nodejs22 version
  ansible.builtin.shell: dnf module enable nodejs:20 -y
#      dnf install nodejs -y
- name: Install nodejs
  ansible.builtin.dnf:
    name: nodejs
    state: present
#        useradd expense
- name: Add the user 'expense'
  ansible.builtin.user:
    name: expense

- name: App Pre-Requisites
  ansible.builtin.include_role:
    name: common
    tasks_from: app_prereq

#npm install
- name: Install npm dependencies
  community.general.npm:
    name: npm
    path: /app
#cp backend.service /etc/systemd/system/backend.service
- name: Copy backend service file
  ansible.builtin.copy:
    src: backend.service
    dest: /etc/systemd/system/backend.service
#systemctl daemon-reload
#systemctl enable backend
#systemctl start backend
- name: Daemon-reload, enable and start backend services
  ansible.builtin.systemd_service:
    name: backend
    state: restarted
    daemon_reload: true
    enabled: yes
#dnf install mysql -y
- name: Install mysql client
  ansible.builtin.dnf:
    name: mysql
    state: latest
#dnf install -y python3-PyMySQL
- name: Install python library for MySQL
  ansible.builtin.dnf:
    name: python3-PyMySQL
    state: installed
#mysql -h <MYSQL-SERVER-IPADDRESS> -uroot -pExpenseApp@1 < /app/schema/backend.sql
- name: Load schema
  community.mysql.mysql_db:
    name: all
    state: import
    login_user: root
    login_password: ExpenseApp@1
    login_host: mysql-dev.aquireawsdevops.online
    target: /app/schema/backend.sql
