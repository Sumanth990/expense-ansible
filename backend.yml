- name: Backend setup
  hosts: all
  become: true
  tasks:
#    dnf module disable nodejs -y
    - name: Disable default version of nodejs
      ansible.builtin.shell:
        cmd: dnf module disable nodejs -y
#    dnf module enable nodejs:20 -y
    - name: Enable nodejs22 version
      ansible.builtin.shell: dnf module enable nodejs:20 -y
#      dnf install nodejs -y
    - name: Install nodejs
      ansible.builtin.dnf:
        name: nodejs
        state: present
#        useradd expense
    - name: Add the user 'expense'
      ansible.builtin.user:
        name: expense
#        mkdir /app
    - name: Create a directory for application
      ansible.builtin.file:
        path: /app
        state: directory
#  curl -o /tmp/backend.zip https://expense-artifacts.s3.amazonaws.com/backend.zip
#  cd /app
#  unzip /tmp/backend.zip
    - name: Download and Unarchive a file
      ansible.builtin.unarchive:
        src: https://expense-artifacts.s3.amazonaws.com/backend.zip
        dest: /app
        remote_src: yes
#npm install
    - name: Install npm dependencies
      community.general.npm:
        name: npm
        path: /app
#systemctl daemon-reload
#systemctl enable backend
#systemctl start backend
    - name: Daemon-reload, enable and start backend services
      ansible.builtin.systemd_service:
        state: started
        daemon_reload: true
        enable: yes
#dnf install mysql -y
    - name: Install mysql client
      ansible.builtin.dnf:
        name: mysql
        state: latest
#mysql -h <MYSQL-SERVER-IPADDRESS> -uroot -pExpenseApp@1 < /app/schema/backend.sql
    - name: Load schema
      community.mysql.mysql_db:
        name: all
        state: import
        login_user: root
        login_password: ExpenseApp@1
        login_host: mysql-dev.aquireawsdevops.online
        target: /app/schema/backend.sql

